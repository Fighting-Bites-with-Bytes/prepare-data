{
  "hash": "e4c5db844392fe79c5c12496e7417daa",
  "result": {
    "markdown": "\n\n# Prepare covariates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\nlibrary(\"terra\")\nlibrary(\"stringr\")\nlibrary(\"purrr\")\nlibrary(\"sf\")\nlibrary(\"readr\")\n```\n:::\n\n\n## Mask\n\n\n::: {.cell}\n\n```{.r .cell-code}\nswisstlm_temp_path <- \"data-temp/swissTLM/\"\nunzip(\"data-raw/public/swissTLM/swisstlmregio_2022_2056.gdb.zip\", exdir = swisstlm_temp_path)\n\nswitzerland <- read_sf(\"data-raw/public/swissTLM/swissBOUNDARIES3D_1_4_LV95_LN02.gdb\", \"TLM_LANDESGEBIET\") |>\n  st_zm() |>\n  filter(NAME != \"Liechtenstein\") |>\n  st_union() |>\n  st_transform(2056)\n\ntlm_region_lake <- read_sf(file.path(swisstlm_temp_path, \"swissTLMRegio_Produkt_LV95.gdb\"), \"TLMRegio_Lake\")\n\ntlm_region_lake <- tlm_region_lake[switzerland,,]\n\ntlm_region_lake <- tlm_region_lake |>\n    slice_max(SHAPE_Area, n = 10)\n\nmask_template <- rast(crs = \"epsg:2056\", resolution = 100, xmin = 2485000, xmax = 2834000, ymin = 1075000, ymax = 1296000)\n\nswitzerland_mask <- terra::rasterize(vect(switzerland), mask_template)\n\nswitzerland_mask <- mask(switzerland_mask, tlm_region_lake,inverse = TRUE) \n\nmask_path <- \"data-processed/Mask/\"\nif(!dir.exists(mask_path)) dir.create(mask_path, recursive = TRUE)\nwriteRaster(switzerland_mask, file.path(mask_path, \"Mask.tif\"), datatype = \"INT1U\", overwrite = TRUE)\n```\n:::\n\n\n\n\n## Population\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzips <- list.files(\"data-raw/public/Population/\", full.names = TRUE)\n\nzip_csvs <- sapply(zips, \\(x){\n    df <- unzip(x, list = TRUE)\n\n    df$Name[str_detect(df$Name, \"STATPOP\\\\d{4}.csv\")]\n})\n\n# names(zip_csvs)\n\npopulation_path <- \"data-temp/Population\"\n\nif(!dir.exists(population_path)) dir.create(population_path)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimap(zip_csvs, \\(csv_i, zip_i){\n    unzip(zip_i, csv_i, exdir = population_path, junkpaths = TRUE)\n}) |>\n    invisible()\n\n\npop_csvs <- list.files(population_path, \"STATPOP\", full.names = TRUE)\n\npop_csvs <- pop_csvs[as.integer(str_match(basename(pop_csvs), \"\\\\d{4}\"))>=2015]\n\npopulation <- map(pop_csvs, \\(x){\n        read_delim(x, col_select = c(E_KOORD, N_KOORD, matches(\"B\\\\d{2}BTOT\"))) |>\n            rast()\n    }) |>\n    rast()\n\n# add crs information\ncrs(population) <- \"epsg:2056\"\n\ndates <- paste0(\"20\",str_match(names(population), \"B(\\\\d{2})BTOT\")[,2],\"-01-01\") |>\n  as.Date()\n\ntime(population) <- dates\n\nnames(population) <- dates\n\npopulation_path2 <- \"data-processed/Population\"\nif(!dir.exists(population_path)) dir.create(population_path2)\nwriteRaster(population, file.path(population_path2, \"Population_2015-2021.tif\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: [writeRaster] file exists. You can use 'overwrite=TRUE' to overwrite it\n```\n:::\n:::\n\n\n\n## Elevation\n\n\n- dataset: `./data/prepared/DHM/DHM25.tif` (CRS: `EPSG: 21781`)\n\n\nTemperature has a big impact on the occurance of ticks. The mentioned expert based model used elevation as a proxy for temperature and removed risk classes based according to the following system:\n\n| Elevation   | Classification  |\n|-------------|-----------------|\n| 1200 - 1600 | minus 1 class   |\n| 1600 - 1900 | minus 2 classes |\n| > 1900      | 0               |\n\nThe [Digital height model DHM25](https://www.swisstopo.admin.ch/en/geodata/height/dhm25.html) is a dataset with 25 m resolution describing elevation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"data preperation\"}\ndhm_path <- \"data-temp/DHM/\"\nif(!dir.exists(dhm_path)) dir.create(dhm_path)\nunzip(\"data-raw/public/DHM/DHM25_MM_ASCII_GRID.zip\", exdir = dhm_path)\n\ndhm25 <- rast(file.path(dhm_path, \"ASCII_GRID_1part/dhm25_grid_raster.asc\"))\n\n# set CRS information\ncrs(dhm25) <- \"epsg: 21781\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# this takes a lot of time! I will provide the reprojected data as a download\ndhm25_2056 <- project(dhm25, \"epsg: 2056\")\n\ndhm_path2 <- \"data-processed/DHM\"\nif(!dir.exists(dhm_path2)) dir.create(dhm_path2)\nwriteRaster(dhm25_2056, file.path(dhm_path2, \"DHM25_2056.tif\"))\n```\n:::\n\n\n## Weather\n\n- Dataset: `prepared/Weather` \n- Variables: \n  - RhiresM: Monthly precipitation\n  - SrelM: Monthly relative sunshine duration\n  - TabsM: Monthly mean temperature\n\nThese variables (or a combination of them) raised or lowered the risk class according to the following system:\n\nWe have prepared some weather data from the [Federal Office of Meteorology and Climatology MeteoSwiss](https://www.meteoswiss.admin.ch/) (Meteo Schweiz). We will provide you with the following datasets (years 2015 - 2021):\n\nA full list of the available variables can be found [here](https://www.meteoschweiz.admin.ch/dam/jcr:215c313a-dc13-4b67-bca0-dbd966597f9a/ProdDoc_Cover-dfie.pdf).\n\n\nThis is how we prepared the data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_monthly <- c(\"RhiresM_61_21_ch01r.swiss.lv95.zip\", \"SrelM_71_21_ch01r.swiss.lv95.zip\", \"TabsM_61_21_ch01r.swiss.lv95.zip\")\n\nweather_path <- \"data-temp/Weather\"\nif(!dir.exists(weather_path)) dir.create(weather_path)\n\nunzip(\"data-raw/public/Wetter/Klimadaten_Feb22.zip\", files = file.path(\"Klimadaten_Feb22\", files_monthly), exdir = weather_path, junkpaths = TRUE)\n\nweather_zips <- list.files(weather_path, pattern = \"\\\\.zip$\", full.names = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(weather_zips, \\(x){\n    nc_names <- unzip(x, list = TRUE)$Name\n    nc_select <- nc_names[as.integer(str_match(nc_names, \"(\\\\d{4})\\\\d{8}\")[,2]) >= 2015]\n    nc_select <- nc_select[!is.na(nc_select)]\n    exdir <- file.path(weather_path, str_match(basename(x), \"([a-zA-Z]+)\")[,2])\n    unzip(x, files = nc_select, exdir = exdir, junkpaths = TRUE)\n})\n\n\nfile.remove(weather_zips)\n \n\n\nweather_files <- list.files(weather_path, \"\\\\.nc\", recursive = TRUE, full.names = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_path2 <- \"data-processed/Weather\"\nmap(weather_files, \\(file_i){\n  rast_i <- rast(file_i)\n\n  from_to <- str_match(file_i, \"(\\\\d{8})\\\\d{4}_(\\\\d{8})\\\\d{4}\")[,2:3] |>\n    as.Date(format = \"%Y%m%d\")\n\n  measurement <- str_match(basename(file_i), \"^[a-zA-Z]+\")[,1]\n\n  new_filepath <- file.path(weather_path2,measurement)\n  if(!dir.exists(new_filepath)) dir.create(new_filepath,recursive = TRUE)\n  new_filename <- paste0(paste(from_to, collapse = \"_\"), \".tif\")\n\n\n\n  times <- seq(from_to[1], from_to[2], by = \"month\")\n  time(rast_i) <- times\n  crs(rast_i) <- \"epsg:2056\"\n  writeRaster(rast_i, file.path(new_filepath, new_filename), overwrite = TRUE)\n})\n```\n:::\n\n\n\nTo import the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_files2 <- list.files(weather_path2, \"\\\\.tif$\", recursive = TRUE, full.names = TRUE)\n\n\nrhires_2015 <- rast(weather_files2[1])\n\nplot(rhires_2015)\n```\n\n::: {.cell-output-display}\n![](02_Prepare_covariates_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# to get the mean over all months\n\nmean(rhires_2015) |>\n  plot()\n```\n\n::: {.cell-output-display}\n![](02_Prepare_covariates_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n\n\n## Forest mix\n\n\nPercentage of \"Laubbaumholz\" (deciduous trees) in a 10m grid. The dataset is provided by the [Federal Office for the Environment](https://map.geo.admin.ch/?lang=de&topic=ech&bgLayer=ch.swisstopo.pixelkarte-farbe&layers=ch.bafu.landesforstinventar-waldmischungsgrad&layers_opacity=0.5&E=2649824.25&N=1226629.34&zoom=10).\n\nThis dataset is also the basis of the dataset [Forest Type](https://www.envidat.ch/dataset/forest-type-nfi) which discriminates forest type into two classes based on the percentage of deciduous trees.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforest_mix_path <- \"data-raw/public/Forest/Waldmischungsgrad_2018_10m_2056.tif\"\nforest_mix <- rast(forest_mix_path)\n\nplot(forest_mix)\n```\n\n::: {.cell-output-display}\n![](02_Prepare_covariates_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nforest_mix_path2 <- \"data-processed/Forest\"\nif(!dir.exists(forest_mix_path2)) dir.create(forest_mix_path2)\nfile.copy(forest_mix_path, file.path(forest_mix_path2, basename(forest_mix_path)), overwrite = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nbasename(forest_mix_path)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Waldmischungsgrad_2018_10m_2056.tif\"\n```\n:::\n:::\n\n\n\n\n## Vegetation Height\n\nlocation: `ftp://ftp.wsl.ch/pub/ginzler/VHM_LFI` (user: `anonymous`)\n\n",
    "supporting": [
      "02_Prepare_covariates_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}